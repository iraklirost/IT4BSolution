
dotnet new sln //dotnet new sln
dotnet new sln --name CleanArcitectur //The following example creates a .sln file in the current folder, with the same name as the folder:
dotnet new sln --output CleanArcitecture  //The following example creates a .sln file in the specified folder, with the same name as the folder:

# Create a new ASP.NET Core Web API project
dotnet new webapi -n CleanArchitecture.API
dotnet new console -n CleanArchitecture.API

dotnet new classlib -n CleanArchitecture.Core
dotnet new classlib -n CleanArchitecture.Application
dotnet new classlib -n CleanArchitecture.Infrustructure

cd CleanArchitecture.Application/
dotnet add CleanArchitecture.Application.csproj reference ../CleanArchitecture.Core/CleanArchitecture.Core.csproj

cd .. cd CleanArchitecture.Infrustructure/
dotnet add CleanArchitecture.Infrustructure.csproj reference ../CleanArchitecture.Application/CleanArchitecture.Application.csproj


#Ardalis Template
dotnet new install Ardalis.CleanArchitecture.Template
dotnet new clean-arch -o CleanArchitecture.SME





https://github.com/rahulsahay19?tab=repositories  - https://github.com/rahulsahay19/clean-architecture 
 
https://www.udemy.com/course/getting-started-with-clean-architecture-using-net-core/learn/lecture/36832188#overview 
https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html 


https://github.com/jasontaylordev/CleanArchitecture - with ASP.NET Core and Angular or React
https://github.com/ardalis/cleanarchitecture - 


dotnet new sln --name Tangy
dotnet new sln --output Tangy
dotnet new blazorserver -n TangyWeb_Server
dotnet new blazorwasm -n TangyWeb_Clinet
